---
name: "ci"

# yamllint disable-line rule:truthy
on:
  pull_request:
    branches:
      - "*"
  push:
    branches:
      - main

permissions:
  attestations: write
  id-token: write
  contents: write

jobs:
  ci:
    name: ci
    runs-on: ubuntu-24.04-arm
    env:
      TOOLCHAIN_NAME: tg5040

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Clone the union repository
        run: git clone https://github.com/shauninman/union-${{ env.TOOLCHAIN_NAME }}-toolchain

      - name: Move the codebase to the correct location
        run: |
          mkdir -p union-${{ env.TOOLCHAIN_NAME }}-toolchain/workspace/repo
          mv *.c Makefile union-${{ env.TOOLCHAIN_NAME }}-toolchain/workspace/repo

      - name: Build the toolchain
        run: |
          docker build -t ${{ env.TOOLCHAIN_NAME }}-toolchain .
          touch .build
        working-directory: union-${{ env.TOOLCHAIN_NAME }}-toolchain

      - name: Build the application
        run: |
          docker run -d -v "$(pwd)/workspace":/root/workspace ${{ env.TOOLCHAIN_NAME }}-toolchain tail -f /dev/null
          container_id="$(docker container ls | grep tg5040-toolchain | awk '{print $1}')"
          sleep 5
          docker container ls -a
          docker exec --env CROSS_COMPILE=/usr/bin/aarch64-linux-gnu- --env PREFIX=/usr "$container_id" make -C /root/workspace/repo setup
          docker exec --env CROSS_COMPILE=/usr/bin/aarch64-linux-gnu- --env PREFIX=/usr "$container_id" make -C /root/workspace/repo
          docker container rm -f "$container_id"
        working-directory: union-${{ env.TOOLCHAIN_NAME }}-toolchain

      - name: Ensure the binary exists
        id: binary
        run: |
          mkdir -p ../dist
          cp "workspace/repo/$(cat workspace/repo/Makefile | grep ^TARGET | awk '{print $3}')-${{ env.TOOLCHAIN_NAME }}" ../dist/
          echo "filename=$(cat workspace/repo/Makefile | grep ^TARGET | awk '{print $3}')" >> $GITHUB_OUTPUT
        working-directory: union-${{ env.TOOLCHAIN_NAME }}-toolchain

      - name: Attest Build Provenance
        uses: actions/attest-build-provenance@v2.1.0
        with:
          subject-path: "dist/${{ steps.binary.outputs.filename }}-${{ env.TOOLCHAIN_NAME}}"

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/*
