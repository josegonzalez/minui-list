---
name: "ci"

# yamllint disable-line rule:truthy
on:
  pull_request:
    branches:
      - "*"
  push:
    branches:
      - main

permissions:
  attestations: write
  id-token: write
  contents: write

jobs:
  ci:
    name: ci
    runs-on: ubuntu-24.04-arm
    strategy:
      fail-fast: false
      matrix:
        toolchain:
          - gkdpixel # (deprecated)
          - m17 # (deprecated)
          - magicmini
          - miyoomini # (deprecated)
          - my282
          - my355
          - rg35xx # (deprecated)
          - rg35xxplus
          - rgb30 # (deprecated)
          - tg3040
          - tg5040
          - trimuismart # (deprecated)
          - zero28

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Clone the union repository
        run: git clone https://github.com/shauninman/union-${{ matrix.toolchain }}-toolchain

      - name: Move the codebase to the correct location
        run: |
          mkdir -p union-${{ matrix.toolchain }}-toolchain/workspace/repo
          mv *.c Makefile union-${{ matrix.toolchain }}-toolchain/workspace/repo

      - name: Build the toolchain
        run: |
          docker build -t ${{ matrix.toolchain }}-toolchain .
          touch .build
        working-directory: union-${{ matrix.toolchain }}-toolchain

      - name: Build the application
        run: |
          set -x
          docker run -d -v "$(pwd)/workspace":/root/workspace ${{ matrix.toolchain }}-toolchain tail -f /dev/null
          container_id="$(docker container ls | grep ${{ matrix.toolchain }}-toolchain | awk '{print $1}')"
          sleep 5
          docker container ls -a
          echo "Container ID: $container_id"
          docker exec --env CROSS_COMPILE=/usr/bin/aarch64-linux-gnu- --env PLATFORM=${{ matrix.toolchain }} --env PREFIX=/usr "$container_id" make -C /root/workspace/repo setup
          docker exec --env CROSS_COMPILE=/usr/bin/aarch64-linux-gnu- --env PLATFORM=${{ matrix.toolchain }} --env PREFIX=/usr "$container_id" make -C /root/workspace/repo
          docker container rm -f "$container_id"
        working-directory: union-${{ matrix.toolchain }}-toolchain

      - name: Ensure the binary exists
        id: binary
        run: |
          mkdir -p ../dist
          ls -lah workspace/repo/
          cp "workspace/repo/$(cat workspace/repo/Makefile | grep ^TARGET | awk '{print $3}')-${{ matrix.toolchain }}" ../dist/
          echo "filename=$(cat workspace/repo/Makefile | grep ^TARGET | awk '{print $3}')" >> $GITHUB_OUTPUT
        working-directory: union-${{ matrix.toolchain }}-toolchain

      - name: Attest Build Provenance
        uses: actions/attest-build-provenance@v2.1.0
        with:
          subject-path: "dist/${{ steps.binary.outputs.filename }}-${{ matrix.toolchain}}"

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/*
